#include <stdio.h>
#include <stdio_ext.h>
#include <math.h>
#include <string.h>
#include <ctype.h>
#include "cgraphv1.h"

int menuVaLuaChon(int a,int b)
{
  int luaChon,buff;
  char c;
  printf("+-----+--------------------------------------------------+\n");
  printf("|%25s%6s%25s|\n","","MENU","");
  printf("+-----+--------------------------------------------------+\n");
  printf("|%5d|%-50s|\n",1,"Y nghia");
  printf("+-----+--------------------------------------------------+\n");

  do
    {
      __fpurge(stdin);
      printf("Nhap vao lua chon cua ban:");
      buff=scanf("%d%c",&luaChon,&c);
      if(buff!=2&&c!='\n'||luaChon<a||luaChon>b) printf("Ban da nhap sai cu phap\n");
    }while(buff!=2&&c!='\n'||luaChon<a||luaChon>b);
  return luaChon;
}

int docFile(Graph g, Graph gDiBo, char* tenFile)
{
  FILE *f;
  int n,m;
  int id1,id2;
  int w;
  f=fopen(tenFile,"r");
  if(f==NULL)
    {
      printf("File open failed\n");
      exit(1);
    }
  fscanf(f,"%d %d\n",&n,&m);
  for(int i=0;i<m;i++)
    {
      fscanf(f,"%d %d %d\n",&id1,&id2,&w);
      addVertex(g, id1, "1");
      addVertex(g, id2, "1");
      addEdge(g, id1, id2, (double) w);
      if(w>=50)
	addEdge(gDiBo,id1,id2,(double) w);     
    }
  return n;
}

int main()
{
  Graph g = createGraph(UNDIRECT_GRAPH);
  Graph gDiBo = createGraph(UNDIRECT_GRAPH);
  int soDinh =  docFile(g,gDiBo,"dothi.txt");
  JRB node;
  JRB node1, node2;
  JRB tree1, tree2;
  int thoat,luaChon;
  int id;
  thoat=0;
  do
    {
      luaChon= menuVaLuaChon(1,4);
      switch(luaChon)
	{
	case 1:
	  docFile(g,gDiBo,"dothi.txt");
	  printf("%5s"," ");
	  jrb_traverse(node,g.vertices)
	    {
	      id = jval_i(node->key);
	      printf("%-5d",id);
	    }
	  jrb_traverse(node,g.vertices)
	    {
	      id=jval_i(node->key);
	      printf("%-5d",id);
	    }
	  //ham1
	    break;
	case 2:
	  //ham2
	  break;
	case 3:
	  //ham3
	  break;
	case 4:
	  thoat=1;
	  break;
	}	
    }while(thoat!=1);
}
