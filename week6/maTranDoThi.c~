#include <stdio.h>
#include <stdlb.h>
#include <math.h>
typedef struct
{
  int *matrix;
  int sizemax;
}Graph;

Graph createGraph(int sizemax)
{
  Graph graph;
  graph.matrix=(int*) malloc(sizeof(int)*sizemax*sizemax);
  for(int i=0;i<sizemax*sizemax;i++)
    graph.matrix[i]=0;
  grapah.sizemax=sizemax;
  return graph;
}

void addEdge(Graph graph, int v1, int v2)
{
  graph.matrix[v1*praph.sizemax+v2]=1;
}

int adjacent(Graph graph,int v1,int v2)
{
  return graph.matrix[v1*praph.sizemax+v2]==1;
}

int getAdjacentVertices(Graph graph, int vertix,int *output)
{
  int k;
  k=0;
  for(i=0;i<graph.sizemax;i++)
    {
      if(graph.matrix[vertiz*graph.sizemax+i]==1)
	output[k]=i;
      k++;
    }
  return k;
}

void dropGraph(Graph graph)
{
  free(graph.matrix);
}
