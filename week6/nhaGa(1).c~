#include <stdio.h>
#include <stdlib.h>
#include  "week4/jrb.h"
#include "week4/jval.h"
#include <string.h>
#define Max 100

typedef JRB Graph;

typedef struct
{
  char* kiHieu;
  char* ten;
}Ga;

Graph createGraph()
{
  Graph graph;
  graph=make_jrb();
  return graph;
}

void addEdge(Graph graph, char* v1,char* v2)
{
  JRB node,tree;
  node=jrb_find_str(graph,v1);
  if(node==NULL)
    {
      tree=make_jrb();
      jrb_insert_str(graph,v1,new_jval_v(tree));
      jrb_insert_str(tree,v2,new_jval_i(1));
    }
  else
    {
      tree=make_jrb();
      tree=(JRB)jval_v(node->val);
      jrb_insert_str(tree,v2,new_jval_i(1));
      node->val=new_jval_v(tree);
    }

  node=jrb_find_str(graph,v2);
  if(node==NULL)
    {
      tree=make_jrb();
      jrb_insert_str(graph,v2,new_jval_v(tree));
      jrb_insert_str(tree,v1,new_jval_i(1));
    }
  else
    {
      tree=make_jrb();
      tree=(JRB)jval_v(node->val);
      jrb_insert_str(tree,v1,new_jval_i(1));
      node->val=new_jval_v(tree);
    }
  // addEdge(graph,v2,v1);
}

int getAdjacentVerties(Graph graph,char *v,char* output[])
{
  JRB node,tree;
  int total;
  node=jrb_find_str(graph,v);
  if(node==NULL)
    return 0;
  else
    {
      tree=(JRB) jval_v(node->val);
      total=0;
      jrb_traverse(node,tree)
	strcpy(output[total++],jval_s(node->key));
      return total;
    }
}

void dropGraph(Graph graph)
{
  JRB node;
  jrb_traverse(node, graph)
    jrb_free_tree(jval_v(node->val));
}


Ga LayGaTuFile(char *str)
{
  Ga ga;
  const char s[2] = "=";
  char *token;
   
   //lay token dau tien
  //printf("%s\n",str);
   token = strtok(str, s);
   ga.kiHieu=token;
   ga.ten=strtok(NULL,s);
   // printf("%s:%s\n",ga.kiHieu,ga.ten);
   return ga;
}


void DocFileCacTramM(Graph graph,char *str,Ga ga[])
{
  int i;
}

int main()
{
  Graph graph;
  Ga ga[Max];
  FILE *fptr;
  char str[Max];
  int i,soGa;
  i=0;

  graph=createGraph();
  
  fptr=fopen("file.txt","r");
  fgets(str,100,fptr);
  //printf("%s",str);
  
  while(1)
    {
      fgets(str,100,fptr);
      if(strcmp(str,"Line:\n")!=0)
	{
	  str[strlen(str)-1]='\0';
	  //printf("%s\n",str);
	  ga[i]=LayGaTuFile(str);
	  printf("%d,%s:%s\n",i,ga[i].kiHieu,ga[i].ten);
	  i++;
	}
      else
	{
	  soGa=i;
	  break;
	}
    }
  printf("%d\n",soGa);
  // printf("%s:%s\n",ga[0].kiHieu,ga[0].ten);
  
  for(i=0;i<soGa;i++)
    {
      printf("%s:%s\n",ga[i].kiHieu,ga[i].ten);
    }
  
  
  /*
  while(fgets(str,100,fptr)!=EOF)
    {

    }
  */
}
